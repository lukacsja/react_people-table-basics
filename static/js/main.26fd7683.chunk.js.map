{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/People/PeopleTable.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","cn","sex","name","PeopleTable","useState","people","setPeople","isTableLoading","setIsTableLoading","apiError","setApiError","personSlug","useParams","findMother","motherName","find","findFather","fatherName","useEffect","peopleFromServer","catch","finally","length","map","born","died","NavBar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.26fd7683.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | null,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person?.slug}`}\n      className={cn(\n        { 'has-text-danger': person?.sex === 'f' },\n      )}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isTableLoading, setIsTableLoading] = useState(false);\n  const [apiError, setApiError] = useState('');\n\n  const { personSlug } = useParams();\n\n  const findMother = (motherName: string | null) => {\n    const mother = people?.find(person => person.name === motherName);\n\n    return mother || null;\n  };\n\n  const findFather = (fatherName: string | null) => {\n    const father = people?.find(person => person.name === fatherName);\n\n    return father || null;\n  };\n\n  useEffect(() => {\n    setIsTableLoading(true);\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer);\n      })\n      .catch(() => {\n        setApiError('unable to load data');\n      })\n      .finally(() => {\n        setIsTableLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isTableLoading && <Loader />}\n\n          {apiError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people?.length && !isTableLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {people?.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people?.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={cn(\n                      { 'has-background-warning': person.slug === personSlug },\n                    )}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {findMother(person.motherName)\n                        ? (\n                          <PersonLink person={findMother(person.motherName)} />\n                        )\n                        : (\n                          person.motherName\n                        )\n                        || '-'}\n                    </td>\n                    <td>\n                      {findFather(person.fatherName)\n                        ? (\n                          <PersonLink person={findFather(person.fatherName)} />\n                        )\n                        : (\n                          person.fatherName\n                        )\n                        || '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeopleTable } from './components/People/PeopleTable';\n\nimport './App.scss';\n\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/home\"\n            element={\n              <Navigate to=\"/\" replace />\n            }\n          />\n          <Route\n            path=\"/\"\n            element={\n              <h1 className=\"title\">Home Page</h1>\n            }\n          />\n          <Route path=\"/people\">\n            <Route\n              index\n              element={\n                <PeopleTable />\n              }\n            />\n            <Route\n              path=\":personSlug\"\n              element={\n                <PeopleTable />\n              }\n            />\n          </Route>\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}