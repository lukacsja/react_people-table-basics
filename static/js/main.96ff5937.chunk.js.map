{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","Utils.ts","components/People/PeopleList.tsx","components/People/PeopleTable.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","cn","sex","name","findMother","people","motherName","find","findFather","fatherName","PeopleList","personSlug","useParams","map","born","died","PeopleTable","useState","setPeople","isTableLoading","setIsTableLoading","hasError","setHasError","useEffect","peopleFromServer","catch","finally","length","NavBar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.96ff5937.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | null,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person?.slug}`}\n      className={cn(\n        { 'has-text-danger': person?.sex === 'f' },\n      )}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import { Person } from './types';\n\nexport const findMother = (people: Person[], motherName: string | null) => {\n  const mother = people?.find(person => person.name === motherName);\n\n  return mother || null;\n};\n\nexport const findFather = (people: Person[], fatherName: string | null) => {\n  const father = people?.find(person => person.name === fatherName);\n\n  return father || null;\n};\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { findMother, findFather } from '../../Utils';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn(\n              { 'has-background-warning': person.slug === personSlug },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {findMother(people, person.motherName)\n                ? (\n                  <PersonLink person={findMother(\n                    people, person.motherName,\n                  )}\n                  />\n                )\n                : (\n                  person.motherName\n                )\n                || '-'}\n            </td>\n            <td>\n              {findFather(people, person.fatherName)\n                ? (\n                  <PersonLink person={findFather(\n                    people,\n                    person.fatherName,\n                  )}\n                  />\n                )\n                : (\n                  person.fatherName\n                )\n                || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PeopleList } from './PeopleList';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isTableLoading, setIsTableLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsTableLoading(true);\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer);\n      })\n      .catch(() => {\n        setHasError(true);\n      })\n      .finally(() => {\n        setIsTableLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isTableLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people?.length && !isTableLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {people?.length && (\n            <PeopleList people={people} />\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeopleTable } from './components/People/PeopleTable';\n\nimport './App.scss';\n\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/home\"\n            element={\n              <Navigate to=\"/\" replace />\n            }\n          />\n          <Route\n            path=\"/\"\n            element={\n              <h1 className=\"title\">Home Page</h1>\n            }\n          />\n          <Route path=\"/people\">\n            <Route\n              index\n              element={\n                <PeopleTable />\n              }\n            />\n            <Route\n              path=\":personSlug\"\n              element={\n                <PeopleTable />\n              }\n            />\n          </Route>\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}